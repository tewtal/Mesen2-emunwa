name: Build Mesen

on: [push]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  windows:
    strategy:
      matrix:
        platform: [
          {netversion: 8.x, targetframework: net8.0, aot: true, singleFile: false, aotString: " - AoT"}
        ]
      fail-fast: false
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.platform.netversion }}

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Restore packages
        run: dotnet restore -p:TargetFramework="${{ matrix.platform.targetframework }}" -r win-x64 -p:PublishAot="${{ matrix.platform.aot }}"

      - name: Write commit SHA1 to file
        uses: ./.github/actions/build-sha1-action

      - name: Build Mesen
        run: msbuild -nologo -v:d -clp:ForceConsoleColor -m -p:Configuration=Release -p:Platform=x64 -t:Clean,UI -p:TargetFramework="${{ matrix.platform.targetframework }}" -p:WindowsTargetPlatformVersion=10.0.22621.0

      - name: Publish Mesen
        run: dotnet publish --no-restore -c Release -p:PublishAot="${{ matrix.platform.aot }}" -p:SelfContained="${{ matrix.platform.aot }}" -p:PublishSingleFile="${{ matrix.platform.singleFile }}" -p:OptimizeUi="true" -p:Platform="Any CPU" -p:TargetFramework="${{ matrix.platform.targetframework }}" -r win-x64 Mesen.sln /p:PublishProfile=UI\Properties\PublishProfiles\Release.pubxml

      - name: Upload Mesen
        uses: actions/upload-artifact@v4
        with:
          name: Mesen (Windows - ${{ matrix.platform.targetframework }}${{ matrix.platform.aotString }})
          path: |
            build/TmpReleaseBuild/Mesen.exe


  linux:
    strategy:
      matrix:
        compiler: [gcc, clang, clang_aot]
        platform: [
          {os: ubuntu-22.04}
        ]
        include:
          - compiler: gcc
            make_flags: "USE_GCC=true"
          - compiler: clang
            make_flags: ""
          - compiler: clang_aot
            make_flags: "USE_AOT=true"
      fail-fast: false
    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install dependencies
        run: |
          sudo apt-get update -qy
          sudo apt-get install -qy libsdl2-dev ccache # The compilers are already installed on GitHub's runners.

      - name: Setup CCache
        uses: ./.github/actions/setup-ccache-action
       
      - name: Write commit SHA1 to file
        uses: ./.github/actions/build-sha1-action
        
      # stderr is not detected as a TTY, so diagnostics are by default printed without colours;
      # forcing colours makes the log a little nicer to read.
      - name: Build Mesen
        run: |
          make -j$(nproc) -O ${{ matrix.make_flags }} LTO=true STATICLINK=true SYSTEM_LIBEVDEV=false

      - name: Upload Mesen
        uses: actions/upload-artifact@v4
        with:
          name: Mesen (Linux - ${{ matrix.platform.os }} - ${{ matrix.compiler }})
          path: bin/linux-x64/Release/linux-x64/publish/Mesen

  appimage:
    strategy:
      matrix:
        compiler: [clang_appimage]
        platform: [{os: ubuntu-22.04}]
    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install dependencies
        run: |
          sudo apt-get update -qy
          sudo apt-get install -qy libsdl2-dev libfuse2 ccache # The compilers are already installed on GitHub's runners.

      - name: Setup CCache
        uses: ./.github/actions/setup-ccache-action

      - name: Write commit SHA1 to file
        uses: ./.github/actions/build-sha1-action

      - name: Build Mesen (AppImage)
        run: |
          Linux/appimage/appimage.sh
      - name: Upload Mesen (AppImage)
        uses: actions/upload-artifact@v4
        with:
          name: Mesen (Linux x64 - AppImage)
          path: Mesen.AppImage
